/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roadnetwork.gui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import roadnetwork.controllers.RunSimulationController;
import roadnetwork.domain.BestPathAlgorithm;
import roadnetwork.domain.ResultSimulation;

/**
 *
 * @author André Pedrosa, Hélder Faria, José Miranda, Rubén Rosário
 */
public class RunSimulationFrame extends javax.swing.JFrame {

    private MainFrame m_mainFrame;
    private RunSimulationController m_runSimulationContoller;
    private ResultSimulation m_runResults;

    /**
     * Creates new form RunSimulationFrame
     */
    public RunSimulationFrame(MainFrame frame) {

        m_mainFrame = frame;
        m_runSimulationContoller = new RunSimulationController(m_mainFrame.getManager());

        run();
    }

    private void run() {
        if (!m_runSimulationContoller.newSimulationRun()) {
            JOptionPane.showMessageDialog(this, "Can't run simulation. There is no active simulation.", "No active simulation", JOptionPane.INFORMATION_MESSAGE);
            setVisible(false);
        } else {

            ArrayList<BestPathAlgorithm> bpmList = m_runSimulationContoller.getBestPathMethods();

            initComponents();
            setLocationRelativeTo(null);

            setContentPane(new RunSimulationInsertDataPane(this, bpmList));
            setTitle("Run Simulation");
            setVisible(true);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 308, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    void runSimulation(String name, double duration, double timeStep, BestPathAlgorithm bpm) {
        m_runResults = m_runSimulationContoller.setRunData(name, duration, timeStep, bpm);

        showResults();
    }

    private void showResults() {
        setContentPane(new RunSimulationShowResults(this, m_runResults));
        revalidate();
    }

    void saveResults() {
        int response = m_runSimulationContoller.saveRun();
        if (response == 1) {
            JOptionPane.showMessageDialog(this, "The run results have been saved to the data base server.", "Simulation Run", JOptionPane.INFORMATION_MESSAGE);
            setVisible(false);
        } else if (response == -2) {
            JOptionPane.showMessageDialog(this, "Error! The active simulation does not exist in the data base serve. You have to save the project first.", "Simulation Run", JOptionPane.INFORMATION_MESSAGE);
        } else if (response == -3) {
            JOptionPane.showMessageDialog(this, "Error! It was not possible to save the results to the data base server.", "Simulation Run", JOptionPane.INFORMATION_MESSAGE);
        }

    }

}
