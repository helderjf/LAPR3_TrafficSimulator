/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roadnetwork.gui;

import java.sql.SQLRecoverableException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import roadnetwork.controllers.OpenSimulationController;

/**
 *
 * @author André Pedrosa, Hélder Faria, José Miranda, Rubén Rosário
 */
public class OpenSimulationDialog extends javax.swing.JDialog {

    private MainFrame m_ancestor;
    private OpenSimulationController m_openSimulationController;

    /**
     * Creates new form OpenSimulationDialog
     */
    public OpenSimulationDialog(MainFrame parent, boolean modal) {
        super(parent, modal);
        m_ancestor = parent;
        m_openSimulationController = new OpenSimulationController(m_ancestor.getManager());
        initComponents();
        run();

    }

    private void run() {
        try {
            int response = m_openSimulationController.canOpenSimulation();
            
            if (response == -1) {
                JOptionPane.showMessageDialog(this, "Can't open simulation. There is no active project.", "No active project", JOptionPane.INFORMATION_MESSAGE);
                setVisible(false);
            } else if (response == -2) {
                JOptionPane.showMessageDialog(this, "Can't open simulation. Projec has no Road Network or Vehicles", "Error", JOptionPane.INFORMATION_MESSAGE);
                setVisible(false);
            } else if (response == -3) {
                JOptionPane.showMessageDialog(this, "The currernt Project has no simulations", "No Simulations", JOptionPane.INFORMATION_MESSAGE);
                setVisible(false);
            } else {
                
                ArrayList<String> simulationList = m_openSimulationController.getProjectSimulations();
                setContentPane(new OpenSimulationPane(this, simulationList));
                setLocationRelativeTo(null);
                setVisible(true);
            }
        } catch (SQLRecoverableException ex) {
            JOptionPane.showMessageDialog(this, "Error found while trying to connect to database. Please try again.", "Database Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(OpenSimulationDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    void selectSimulation(String selectedValue) {
        if (m_openSimulationController.selectSimulation(selectedValue)) {
            JOptionPane.showMessageDialog(this, "The selected simulation is now active.", "Open simulation", JOptionPane.INFORMATION_MESSAGE);
            setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Error. It was not possible to open the simulation.", "Open simulation", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
