

-------------------------------------------------------------------
----------------------SEQUENCES------------------------------------
-------------------------------------------------------------------

CREATE SEQUENCE seq_project START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_road_network START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_node START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_section START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_segment START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_vehicle START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_simulation START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_traffic_pattern START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_simulation_run START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_injected_vehicle START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE seq_dropped_vehicle START WITH 1 INCREMENT BY 1;




-------------------------------------------------------------------
----------------------TABLES---------------------------------------
-------------------------------------------------------------------


CREATE table PROJECTS(
	ID_PROJECT integer,
	NAME varchar(255) NOT NULL UNIQUE,
	DESCRIPTION varchar2(255),
	STATE varchar(255) NOT NULL,
	CONSTRAINT pk_Project PRIMARY KEY(ID_Project));



CREATE table ROAD_NETWORKS(
	ID_ROAD_NETWORK integer,
	ID_PROJECT integer,
	NAME varchar2(255) NOT NULL,
	DESCRIPTION varchar2(255),
	CONSTRAINT pk_Road_Network PRIMARY KEY(ID_ROAD_NETWORK),
	CONSTRAINT fk_Road_Network_Project FOREIGN KEY(ID_Project) REFERENCES PROJECTS(ID_Project));


CREATE table NODES(
	ID_NODE integer,
	ID_ROAD_NETWORK integer,
	NAME varchar2(255) NOT NULL,
	CONSTRAINT pk_Nodes PRIMARY KEY (ID_Node),
	CONSTRAINT fk_Nodes_RN_id FOREIGN KEY (ID_ROAD_NETWORK) 
				REFERENCES ROAD_NETWORKS(ID_ROAD_NETWORK));


CREATE table SECTION_TYPOLOGIES(
	ID_TYPOLOGY integer,
	NAME varchar(255) NOT NULL UNIQUE,
	CONSTRAINT pk_Section_typologies PRIMARY KEY(ID_TYPOLOGY));

INSERT Into SECTION_TYPOLOGIES(ID_TYPOLOGY, Name) values(1,'regular_road');
INSERT Into SECTION_TYPOLOGIES(ID_TYPOLOGY, Name) values(2,'urban_road');
INSERT Into SECTION_TYPOLOGIES(ID_TYPOLOGY, Name) values(3,'urban_street');
INSERT Into SECTION_TYPOLOGIES(ID_TYPOLOGY, Name) values(4,'street');
INSERT Into SECTION_TYPOLOGIES(ID_TYPOLOGY, Name) values(5,'expressroad');
INSERT Into SECTION_TYPOLOGIES(ID_TYPOLOGY, Name) values(6,'controlled_access_highway');
INSERT Into SECTION_TYPOLOGIES(ID_TYPOLOGY, Name) values(7,'highway');


CREATE table SECTIONS(
	ID_SECTION integer,
	ID_ROAD_NETWORK integer,
	ROAD_NAME varchar2(255),
	BEGINING_NODE_ID integer,
	ENDING_NODE_ID integer,
	ID_TYPOLOGY integer,
	DIRECTION varchar2(255) NOT NULL,
	TOLL float,
	WIND_DIRECTION float,
	WIND_SPEED float,
	CONSTRAINT pk_Sections PRIMARY KEY(ID_SECTION),
	CONSTRAINT fk_Sections_idRoadNetwork FOREIGN KEY (ID_ROAD_NETWORK) REFERENCES ROAD_NETWORKS(ID_ROAD_NETWORK),
	CONSTRAINT fk_Sections_Beg_node FOREIGN KEY (BEGINING_NODE_ID) REFERENCES NODES(ID_NODE),
	CONSTRAINT fk_Sections_End_node FOREIGN KEY (ENDING_NODE_ID) REFERENCES NODES(ID_NODE),
	CONSTRAINT fk_Sections_typology FOREIGN KEY (ID_TYPOLOGY) REFERENCES SECTION_TYPOLOGIES(ID_TYPOLOGY),
	CONSTRAINT ck_section_direction CHECK (DIRECTION like 'unidirectional' or DIRECTION like 'bidirectional'));


CREATE table SEGMENTS(
	SEGMENT_INDEX integer,
	ID_SECTION integer,
	INITIAL_HEIGHT float NOT NULL,
	SLOPE  float NOT NULL,
	LENGHT float NOT NULL,
	MAX_VELOCITY float NOT NULL,
	MIN_VELOCITY float NOT NULL,
	MAX_VEHICLES float NOT NULL,
	CONSTRAINT pk_Segments PRIMARY KEY(SEGMENT_INDEX, ID_SECTION),
	CONSTRAINT fk_Segments_id_section FOREIGN KEY (ID_SECTION) REFERENCES SECTIONS(ID_SECTION));








CREATE table VEHICLES(
	ID_VEHICLE integer,
	ID_PROJECT integer,
	NAME varchar2(255) NOT NULL,
	DESCRIPTION varchar2(255),
	TYPE varchar2(255) NOT NULL,
	FUEL varchar2(255),
	MASS float NOT NULL,
	LOAD float,
	DRAG_COEF float NOT NULL,
	FRONTAL_AREA float NOT NULL,
	RRC float NOT NULL,
	WHEEL_SIZE float NOT NULL,
	FINAL_DRIVE_RATIO float NOT NULL,
	RPM_MIN float NOT NULL,
	RPM_MAX float NOT NULL,
	CONSTRAINT pk_Vehicles PRIMARY KEY(ID_VEHICLE),
	CONSTRAINT fk_Vehicles_ID_Project FOREIGN KEY(ID_PROJECT) REFERENCES PROJECTS(ID_PROJECT));


CREATE table COMBUSTION_VEHICLES(
	ID_VEHICLE integer,
	CONSTRAINT pk_CombustionVehicles PRIMARY KEY(ID_VEHICLE),
	CONSTRAINT fk_CombVe_ID_VEHICLE FOREIGN KEY(ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE));

CREATE table HYBRID_VEHICLES(
	ID_VEHICLE integer,
	ENERGY_REGENERATION_RATIO float,
	CONSTRAINT pk_HybridVehicles PRIMARY KEY(ID_VEHICLE),
	CONSTRAINT fk_HybVe_ID_VEHICLE FOREIGN KEY(ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE));


CREATE table ELECTRIC_VEHICLES(
	ID_VEHICLE integer,
	ENERGY_REGENERATION_RATIO float,
	CONSTRAINT pk_ElectricVehicles PRIMARY KEY(ID_VEHICLE),
	CONSTRAINT fk_ElecVe_ID_VEHICLE FOREIGN KEY(ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE));


CREATE table GEARS(
	ID_VEHICLE integer,
	ID_GEAR integer,
	RATIO float,
	CONSTRAINT pk_Gears PRIMARY KEY(ID_GEAR, ID_VEHICLE),
	CONSTRAINT fk_Gears_ID_VEHICLEs FOREIGN KEY(ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE));


CREATE table THROTTLES(
	ID_VEHICLE integer,
	ID_THROTTLE varchar(255),
	ID_REGIME integer,
	TORQUE float,
	RPM_LOW float,
	RPM_HIGH float,
	SFC float,
	CONSTRAINT pk_Throttles PRIMARY KEY(ID_THROTTLE, ID_REGIME, ID_VEHICLE),
	CONSTRAINT fk_Throttles_ID_VEHICLEs FOREIGN KEY(ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE));

CREATE table VEHICLES_VELOCITY_LIMITS(
	ID_VEHICLE integer,
	ID_TYPOLOGY integer,
	VEL_LIMIT float,
	CONSTRAINT pk_Vel_Limits PRIMARY KEY (ID_VEHICLE, ID_TYPOLOGY),
	CONSTRAINT fk_Vel_Limits_Vehicles FOREIGN KEY (ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE),
	CONSTRAINT fk_Vel_Limits_Typology FOREIGN KEY (ID_TYPOLOGY) REFERENCES SECTION_TYPOLOGIES(ID_TYPOLOGY));






CREATE table SIMULATIONS(
	ID_SIMULATION integer,
	ID_PROJECT integer,
	NAME varchar2(255) NOT NULL,
	DESCRIPTION varchar2(255),
	State varchar2(255) NOT NULL,
	CONSTRAINT pk_simulations PRIMARY KEY (ID_SIMULATION),
	CONSTRAINT fk_simulations_project FOREIGN KEY (ID_PROJECT) REFERENCES PROJECTS(ID_PROJECT));
	
	
CREATE table TRAFFIC_PATTERNS(
	ID_TRAFFIC_PATTERN integer,
	ID_SIMULATION integer,
	BEGIN_NODE_ID integer,
	END_NODE_ID integer,
	ID_VEHICLE integer,
	ARRIVAL_RATE float NOT NULL,
	CONSTRAINT pk_traffic_pattern PRIMARY KEY (ID_TRAFFIC_PATTERN),
	CONSTRAINT fk_traffpattern_simulation FOREIGN KEY (ID_SIMULATION) REFERENCES SIMULATIONS(ID_SIMULATION),
	CONSTRAINT fk_traffpattern_beginnode FOREIGN KEY (BEGIN_NODE_ID) REFERENCES NODES(ID_Node),
	CONSTRAINT fk_traffpattern_endnode FOREIGN KEY (END_NODE_ID) REFERENCES NODES(ID_Node),
	CONSTRAINT fk_traffpattern_vehicle FOREIGN KEY (ID_VEHICLE) REFERENCES VEHICLES(ID_VEHICLE));		
	
	
	
CREATE table SIMULATION_RUNS(
	ID_RUN integer,
	ID_SIMULATION integer,
	NAME varchar2(255) NOT NULL,
	DURATION float NOT NULL,
	TIME_STEP float NOT NULL,
	BEST_PATH_METHOD varchar2(255) NOT NULL,
	CONSTRAINT pk_runs PRIMARY KEY (ID_RUN),
	CONSTRAINT fk_runs_simulation FOREIGN KEY (ID_SIMULATION) REFERENCES SIMULATIONS(ID_SIMULATION));

create table INJECTED_VEHICLES(
	ID_INJECTED_VEHICLE integer,
	ID_RUN integer,	
	ID_TRAFFIC_PATTERN integer,
	CONSTRAINT pk_injected_vehicles PRIMARY KEY (ID_INJECTED_VEHICLE),
	CONSTRAINT fk_injected_v_run FOREIGN KEY (ID_RUN) REFERENCES SIMULATION_RUNS(ID_RUN) ON DELETE CASCADE,
	CONSTRAINT fk_injected_v_traffpattern FOREIGN KEY (ID_TRAFFIC_PATTERN) REFERENCES TRAFFIC_PATTERNS(ID_TRAFFIC_PATTERN));


create table INJECTED_VEHICLES_BEHAVIOURS(
	ID_INJECTED_VEHICLE integer,
	ID_SECTION integer,
	SEGMENT_INDEX integer,
	DIRECTION varchar2(255),
	INSTANT_IN float,	
	INSTANT_OUT float,
	ENERGY_SPENT float,
	CONSTRAINT pk_injected_v_behaviours PRIMARY KEY (ID_INJECTED_VEHICLE,ID_SECTION,SEGMENT_INDEX),
	CONSTRAINT fk_inj_v_behav_inj_v FOREIGN KEY (ID_INJECTED_VEHICLE) REFERENCES INJECTED_VEHICLES(ID_INJECTED_VEHICLE) ON DELETE CASCADE,
	CONSTRAINT fk_inj_v_behaviours_section FOREIGN KEY (ID_SECTION,SEGMENT_INDEX) REFERENCES SEGMENTS(ID_SECTION,SEGMENT_INDEX),
	CONSTRAINT ck_inj_v_direction CHECK (DIRECTION like 'direct' or DIRECTION like 'reverse'));
	

create table DROPPED_VEHICLES(
	ID_DROPPED_VEHICLE integer,
	ID_RUN integer,
	ID_TRAFFIC_PATTERN integer,
	INSTANT_DROPPED float NOT NULL,
	CONSTRAINT pk_dropped_vehicles PRIMARY KEY (ID_DROPPED_VEHICLE),
	CONSTRAINT fk_dropped_v_run FOREIGN KEY (ID_RUN) REFERENCES SIMULATION_RUNS(ID_RUN) ON DELETE CASCADE,
	CONSTRAINT fk_dropped_v_traffpattern FOREIGN KEY (ID_TRAFFIC_PATTERN) REFERENCES TRAFFIC_PATTERNS(ID_TRAFFIC_PATTERN));




-------------------------------------------------------------------
----------------------DATA TYPES-----------------------------------
-------------------------------------------------------------------

create or replace type VARCHAR2_T is table of varchar2(255);
create or replace type INTEGER_T is table of integer;
create or replace type FLOAT_T is table of float;


